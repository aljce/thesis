open import Algebra using (RawRing)

module AKS.Polynomial.Base {c РёЊ} (R : RawRing c РёЊ) where

-- TODO switch to preorder based max
open import Data.Nat using (_Ріћ_)
open import AKS.Nat using (РёЋ)
open РёЋ

open RawRing R using (0#; 1#; _+_; _*_; -_)
  renaming (Carrier to C)

_-_ : C Рєњ C Рєњ C
x - y = x + (- y)

-- data Degree : Set where
--   -Рѕъ : Degree
--   РЪе_РЪЕ : РёЋ Рєњ Degree

-- _max_ : Degree Рєњ Degree Рєњ Degree
-- -Рѕъ max dРѓѓ = dРѓѓ
-- dРѓЂ max -Рѕъ = dРѓЂ
-- РЪе dРѓЂ РЪЕ max РЪе dРѓѓ РЪЕ = РЪе dРѓЂ Ріћ dРѓѓ РЪЕ

-- 1+ : Degree Рєњ Degree
-- 1+ -Рѕъ = РЪе 0 РЪЕ
-- 1+ РЪе d РЪЕ = РЪе suc d РЪЕ

-- deg : Polynomial Рєњ Degree
-- deg 0рхќ = -Рѕъ
-- deg (_ +xРѕЎ p) = 1+ (deg p)

data Polynomial : Set c where
  0рхќ : Polynomial
  _+xРѕЎ_ : C Рєњ Polynomial Рєњ Polynomial

РЪд_РЪД : Polynomial Рєњ C Рєњ C
РЪд 0рхќ РЪД x = 0#
РЪд k +xРѕЎ p РЪД x = k + x * РЪд p РЪД x

1рхќ : Polynomial
1рхќ = 1# +xРѕЎ 0рхќ

infixl 6 _+рхќ_
_+рхќ_ : Polynomial Рєњ Polynomial Рєњ Polynomial
0рхќ +рхќ q = q
p +рхќ 0рхќ = p
(kРѓЂ +xРѕЎ p) +рхќ (kРѓѓ +xРѕЎ q) = (kРѓЂ + kРѓѓ) +xРѕЎ (p +рхќ q)

infixl 7 _РѕЎрхќ_
_РѕЎрхќ_ : C Рєњ Polynomial Рєњ Polynomial
a РѕЎрхќ 0рхќ = 0рхќ
a РѕЎрхќ (k +xРѕЎ p) = (a * k) +xРѕЎ (a РѕЎрхќ p)

xРѕЎ_ : Polynomial Рєњ Polynomial
xРѕЎ p = 0# +xРѕЎ p

­ЮЉІ : Polynomial
­ЮЉІ = xРѕЎ 1рхќ

infixl 7 _*рхќ_
_*рхќ_ : Polynomial Рєњ Polynomial Рєњ Polynomial
0рхќ *рхќ q = 0рхќ
p *рхќ 0рхќ = 0рхќ
(kРѓЂ +xРѕЎ p) *рхќ (kРѓѓ +xРѕЎ q) = (kРѓЂ * kРѓѓ) +xРѕЎ (kРѓЂ РѕЎрхќ q +рхќ kРѓѓ РѕЎрхќ p +рхќ xРѕЎ (p *рхќ q))
-- (kРѓЂ + x * p[x]) * (kРѓѓ + x * q[x]) = kРѓЂ * kРѓѓ + x * (kРѓЂ * q[x] + kРѓѓ * p[x] + x * (p[x] * q[x]))

-рхќ_ : Polynomial Рєњ Polynomial
-рхќ 0рхќ = 0рхќ
-рхќ (x +xРѕЎ p) = (- x) +xРѕЎ (-рхќ p)

-- 1 + x + x^2
ex1 : Polynomial
ex1 = 1# +xРѕЎ (1# +xРѕЎ (1# +xРѕЎ 0рхќ))

-- 1 + x + x^2
ex2 : Polynomial
ex2 = 1рхќ +рхќ ­ЮЉІ +рхќ ­ЮЉІ *рхќ ­ЮЉІ
